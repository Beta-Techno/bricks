#+TITLE: Compute Module Reference
#+AUTHOR: Your Name
#+DATE: 2024

* Compute Module

The compute module manages virtual machines and containers in Proxmox, including resource allocation and cloud-init configuration.

* Features

- VM management with cloud-init
- Container management
- Resource allocation
- Network configuration
- Storage configuration
- Tag management

* Usage

#+BEGIN_SRC hcl
module "proxmox_compute" {
  source = "../../../modules/proxmox-compute"
  
  target_node = var.target_node
  storage_pool = var.storage_pool
  network_bridge = var.network_bridge
  network_gateway = var.network_gateway
  
  vms = {
    "example-vm" = {
      vmid       = 100
      template   = "ubuntu-22.04-template"
      cores      = 2
      sockets    = 1
      memory     = 4096
      disk       = "20G"
      ip         = "10.0.0.100"
      ciuser     = "ubuntu"
      cipassword = "your-password"
      sshkeys    = var.ssh_public_key
      tags       = ["example", "test"]
    }
  }
  
  containers = {
    "example-ct" = {
      template  = "ubuntu-22.04-standard"
      cores     = 1
      memory    = 1024
      swap      = 512
      disk      = "8G"
      ip        = "10.0.0.101"
      tags      = ["example", "test"]
    }
  }
}
#+END_SRC

* Inputs

| Name | Description | Type | Default | Required |
|------|-------------|------|---------|:--------:|
| target_node | The target Proxmox node | string | n/a | yes |
| storage_pool | The storage pool to use | string | "local-lvm" | no |
| network_bridge | The network bridge to use | string | "vmbr0" | no |
| network_gateway | The network gateway | string | n/a | yes |
| vms | Map of VMs to create | map(object) | {} | no |
| containers | Map of containers to create | map(object) | {} | no |

** VM Object
| Name | Description | Type | Default | Required |
|------|-------------|------|---------|:--------:|
| vmid | The VM ID | number | n/a | yes |
| template | The name of the template to use | string | n/a | yes |
| cores | Number of CPU cores | number | 2 | no |
| sockets | Number of CPU sockets | number | 1 | no |
| memory | Amount of memory in MB | number | 4096 | no |
| disk | Size of the root disk | string | "20G" | no |
| ip | The IP address for the VM | string | n/a | yes |
| ciuser | The cloud-init user | string | n/a | yes |
| cipassword | The cloud-init password | string | n/a | yes |
| sshkeys | SSH public key for the VM | string | n/a | yes |
| tags | List of tags | list(string) | [] | no |

** Container Object
| Name | Description | Type | Default | Required |
|------|-------------|------|---------|:--------:|
| template | The name of the template to use | string | n/a | yes |
| cores | Number of CPU cores | number | 1 | no |
| memory | Amount of memory in MB | number | 1024 | no |
| swap | Amount of swap in MB | number | 512 | no |
| disk | Size of the root disk | string | "8G" | no |
| ip | The IP address for the container | string | n/a | yes |
| tags | List of tags | list(string) | [] | no |

* Outputs

| Name | Description |
|------|-------------|
| vms | Map of created VMs with their details |
| containers | Map of created containers with their details |

* Example

#+BEGIN_SRC hcl
# Configure the Proxmox provider
provider "proxmox" {
  pm_api_url          = var.api_url
  pm_user             = var.automation_user.userid
  pm_api_token_id     = var.automation_user.token_id
  pm_api_token_secret = var.automation_user.token_secret
  pm_tls_insecure     = true
}

# Configure compute
module "proxmox_compute" {
  source = "../../../modules/proxmox-compute"
  
  target_node = "pve"
  storage_pool = "local-lvm"
  network_bridge = "vmbr0"
  network_gateway = "10.0.0.1"
  
  vms = {
    "example-vm" = {
      vmid       = 100
      template   = "ubuntu-22.04-template"
      cores      = 2
      sockets    = 1
      memory     = 4096
      disk       = "20G"
      ip         = "10.0.0.100"
      ciuser     = "ubuntu"
      cipassword = "your-password"
      sshkeys    = var.ssh_public_key
      tags       = ["example", "test"]
    }
  }
}
#+END_SRC

* Notes

- VM names must be unique
- Container names must be unique
- Template names must exist
- Network bridges must exist
- IP addresses must be unique
- Disk sizes must be specified in a format supported by Proxmox (e.g., "20G", "100G")
- SSH keys must be in the correct format

* See Also
- [[file:../../architecture/overview.org][Architecture Overview]]
- [[file:../environments/first-vm.org][First VM Environment]]
- [[file:../../best-practices/security.org][Security Best Practices]] 