#+TITLE: Security Best Practices
#+AUTHOR: Your Name
#+DATE: 2024

* Security Best Practices

This document outlines security best practices for using the Bricks infrastructure modules.

* Provider Configuration

** First Node Provider

The first-node provider uses root credentials for initial setup. This is necessary for the initial configuration but should be used with caution.

#+BEGIN_SRC hcl
provider "proxmox" {
  pm_api_url      = "https://${var.ip_address}:8006/api2/json"
  pm_user         = "root@pam"
  pm_password     = var.root_password
  pm_tls_insecure = true  # For development only
}
#+END_SRC

** First VM Provider

The first-vm provider uses an automation user with API token authentication. This is the recommended approach for ongoing operations.

#+BEGIN_SRC hcl
provider "proxmox" {
  pm_api_url          = var.api_url
  pm_user             = var.automation_user.userid
  pm_api_token_id     = var.automation_user.token_id
  pm_api_token_secret = var.automation_user.token_secret
  pm_tls_insecure     = true  # For development only
}
#+END_SRC

* Password Management

- Use strong passwords for all users
- Store passwords securely (e.g., using a password manager or vault)
- Rotate passwords regularly
- Use different passwords for different users
- Use API tokens instead of passwords when possible

* API Token Management

- Use API tokens for automation
- Limit API token permissions to the minimum required
- Rotate API tokens regularly
- Store API tokens securely
- Use different API tokens for different purposes

* Network Security

- Use VLANs to segment networks
- Configure firewalls to restrict access
- Use SSH keys instead of passwords for SSH access
- Change default SSH port
- Use strong SSH key pairs
- Rotate SSH keys regularly

* Storage Security

- Use LVM for storage pools
- Configure storage pool permissions
- Use different storage pools for different purposes
- Monitor storage usage
- Backup storage regularly

* VM Security

- Use templates for VM creation
- Configure VM resource limits
- Use different networks for different VMs
- Monitor VM resource usage
- Backup VMs regularly

* TLS Configuration

- Use TLS for API access
- Configure TLS certificates properly
- Rotate TLS certificates regularly
- Monitor TLS certificate expiration
- Use strong TLS cipher suites

* Development vs. Production

- Use `pm_tls_insecure = true` only in development
- Use proper TLS certificates in production
- Use different credentials for development and production
- Use different networks for development and production
- Use different storage pools for development and production

* See Also
- [[file:../01-architecture/01-overview.org][Architecture Overview]]
- [[file:../03-reference/01-modules/01-host.org][Host Module Reference]]
- [[file:../03-reference/01-modules/02-network.org][Network Module Reference]]
- [[file:../03-reference/01-modules/03-storage.org][Storage Module Reference]]
- [[file:../03-reference/01-modules/04-compute.org][Compute Module Reference]] 